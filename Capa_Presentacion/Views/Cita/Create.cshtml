@model Capa_Entidad.Cita

@{
    ViewBag.Title = "Cita";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mi aplicación ASP.NET</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://getbootstrap.com/docs/5.2/assets/css/docs.css" rel="stylesheet">
</head>
<body class="p-0 m-0 border-0 bd-example">

    <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #121212;">
        <div class="container-fluid">
            <a class="navbar-brand" href="#" style="font-size: calc(10px + 2vmin);">Veterinaria Manatí</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                @if (User.Identity.IsAuthenticated)
                {

                    if (Session["Rol"].ToString() == "1" && Session["Rol"].ToString() != null)
                    {
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Home/">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Account/Usuarios">Usuarios</a>
                            </li>
                        </ul>
                    }
                    else if (Session["Rol"].ToString() == "2" && Session["Rol"].ToString() != null)
                    {
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Home/">Home</a>
                            </li>
                        </ul>
                    }

                    <ul class="nav navbar-nav navbar-right">
                        <li class="nav-item">
                            <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Account/Perfil">@User.Identity.Name</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Account/Logout">Cerrar Sesión</a>
                        </li>
                    </ul>
                }
                else
                {
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Home/">Home</a>
                        </li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right">
                        <li class="nav-item">
                            <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Account/Login">Iniciar Sesión</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" style="font-size: calc(5px + 2vmin);" href="/Account/Create">Registrarse</a>
                        </li>
                    </ul>
                }
            </div>
        </div>
    </nav>
    <div class="container">
        <div class="col-md-12">
            <h2>Create</h2>


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Cita</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.id_Cita, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.id_Cita, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.id_Cita, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.id_Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.id_Usuario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.id_Usuario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.id_Mascota, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.id_Mascota, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.id_Mascota, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-md-10" id="selectMascota">
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.id_UsuarioVeterinario, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.id_UsuarioVeterinario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.id_UsuarioVeterinario, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-md-10" id="selectDoctor">
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10" id="selectServicio">
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.fecha_Cita, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="datetime-local" name="fecha_Cita" class="form-control"/>
                            @Html.ValidationMessageFor(model => model.fecha_Cita, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group">
                        @Html.LabelFor(model => model.fecha_Creacion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.fecha_Creacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fecha_Creacion, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.fecha_Modificacion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.fecha_Modificacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fecha_Modificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.comprobar_Cita, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.comprobar_Cita)
                                @Html.ValidationMessageFor(model => model.comprobar_Cita, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.js"></script>
</body>
</html>

<script>
    $(document).ready(function () {
        listarMascota();
        listarDoctor();
        listarServicio();
    });

    function listarDoctor() {

        $.ajax({
            type: "GET",
            url: "/Admin/listarAdmin",
            dataType: "JSON",
            contentType: "application/json; charset=utf-8",
            cache: false,

            success: function (data) {

                let items = "";

                items += "<label>Doctor</label>";
                items += "<select class='form-select' name='doctor' aria-label='Default select example'>";

                for (let i = 0; i < data.length; i++) {
                    const doctor = data[i];

                    items += "<option id='" + doctor.id_Usuario + "' value='" + doctor.id_Usuario + "'>" + doctor.nombre_Completo + "</option>";
                }

                items += "</select>";

                $("#selectDoctor").append(items);

            },

            error: function (error) {
                alert("Ha ocurrido un error: " + error);
            }
        });

    }

    function listarMascota() {

        $.ajax({
            type: "GET",
            url: "/Mascota/listarNombre_MascotaPorid_Usuario",
            dataType: "JSON",
            contentType: "application/json; charset=utf-8",
            cache: false,

            success: function (data) {
                let items = "";

                let seleccionado = data.toString().split(",");
                let array = [];

                for (let i = 0; i < seleccionado.length; i++) {
                    array.push(seleccionado[i]);
                }

                items += "<label>Mascota</label>";
                items += "<select class='form-select' name='mascota' aria-label='Default select example'>";

                for (let i = 0; i < array.length; i++) {
                    items += "<option id='" + array[i] + "' value='" + array[i] + "'>" + array[i] + "</option>";
                }

                items += "</select>";

                $("#selectMascota").append(items);
            },

            error: function (error) {
                alert("Ha ocurrido un error: " + error);
            }
        });

    }

    function listarServicio() {

        $.ajax({
            type: "GET",
            url: "/Servicio/listarServicio",
            dataType: "JSON",
            contentType: "application/json; charset=utf-8",
            cache: false,

            success: function (data) {

                let items = "";

                items += "<label>Servicio</label>";

                items += "<select class='form-select' name='servicio' aria-label='Default select example'>";
                items += "<option selected>Selecciona un servicio: </option>";

                for (let i = 0; i < data.length; i++) {
                    const servicio = data[i];

                    items += "<option id='" + servicio.id_Servicio + "' value='" + servicio.descripcion +"'>" + servicio.descripcion + "</option>";
                }

                items += "</select>";

                $("#selectServicio").append(items);
            },

            error: function (error) {
                alert("Ha ocurrido un error: " + error);
            }
        });

    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
